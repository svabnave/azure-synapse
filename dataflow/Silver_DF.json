{
	"name": "Silver_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Generic_DS_ADL_Parquet",
						"type": "DatasetReference"
					},
					"name": "WorkCenterMDX"
				},
				{
					"dataset": {
						"referenceName": "Generic_DS_ADL_Parquet",
						"type": "DatasetReference"
					},
					"name": "LocationMDXSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "AL10"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Arbpl as string,",
				"          Kostl as integer,",
				"          Ktext as string,",
				"          Lstar as string,",
				"          Verwe as string,",
				"          Wckat as string,",
				"          Werks as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> WorkCenterMDX",
				"source(output(",
				"          Ktext as string,",
				"          Stand as string,",
				"          Werks as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> LocationMDXSource",
				"WorkCenterMDX, LocationMDXSource join(WorkCenterMDX@Werks == LocationMDXSource@Werks,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 split(WorkCenterMDX@Werks == 'AL10',",
				"     WorkCenterMDX@Werks == 'FE10',",
				"     disjoint: false) ~> AL10@(AL10, FE10, oTHERS)",
				"AL10@oTHERS aggregate(groupBy(Wckat),",
				"     Count = count(Arbpl)) ~> aggregate3",
				"AL10@FE10, AL10@AL10 exists(AL10@FE10@Wckat == AL10@AL10@Wckat,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1"
			]
		}
	}
}